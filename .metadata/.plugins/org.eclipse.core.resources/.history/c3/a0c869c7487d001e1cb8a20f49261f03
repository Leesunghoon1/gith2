package com.myweb.www.controller;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.myweb.www.security.MemberVO;
import com.myweb.www.service.MemberService;

import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/member/*")
public class MemberController {

	@Inject
	private BCryptPasswordEncoder bcEncoder;

	@Inject
	private MemberService msv;

	@GetMapping("register")
	public void register() {

	}

	@PostMapping("register")
	public String register(MemberVO mvo) {

		mvo.setPwd(bcEncoder.encode(mvo.getPwd()));
		// 암호화 setpwd에 bcEncoder에 encode하면 바꿔줌(mvo.getPwd)로 받는 mvo의 페스워드를 바꿔서 setPwd로
		// 바꿔줌
		int isOK = msv.register(mvo);
		return "index";
	}

	@GetMapping("login")
	public void login() {

	}

	@PostMapping("login")
	public String loginPost(HttpServletRequest reqeust, RedirectAttributes re) {
		// 로그인 실패시 다시 로그인 페이지로 돌아와 오류 메시지 전송
		// 다시 로그인 유도
		
		re.addAttribute("email", request().getAttribute("email"));
		
	}

}
